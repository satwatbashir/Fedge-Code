[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "fedge"
version = "1.0.0"
description = "Hierarchical Federated Learning with SCAFFOLD and FedProx for CIFAR-10"
license = "Apache-2.0"
dependencies = [
    "flwr[simulation]>=1.18.0",
    "torch>=2.1",
    "torchvision>=0.15",
    "scikit-learn>=1.4.2",
    "pandas>=2.2.0",
    "filelock>=3.13.0",
    "psutil>=5.9.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "numpy>=1.24.0",
    "scipy>=1.10.0",
    "toml>=0.10.2",
    "pillow>=9.0.0"
]

[tool.hatch.build.targets.wheel]
packages = ["."]

# ------------------------------------------------------------
# Core Hierarchical FL Configuration (names leaf_server expects)
# ------------------------------------------------------------
[tool.flwr.hierarchy]
# Topology (env can override at launch)
num_servers = 2
clients_per_server = [10, 10]
global_rounds = 150
server_rounds_per_global = 1
cloud_port = 6000
server_base_port = 5000

# Training knobs (no duplicates; all have sane defaults)
local_epochs = 1
lr_init = 0.01        # client LR (env LR_INIT overrides if set)
server_lr = 1.0
global_lr = 1.0
weight_decay = 0.0005
momentum = 0.9
clip_norm = 1.0
lr_gamma = 1.0

# FedProx / stability gates
prox_mu = 0.0
prox_mu_min = 0.0
acc_stable_threshold = 0.0
loss_delta = 0.0

# SCAFFOLD switch (server-side implementation)
scaffold_enabled = true

# Evaluation / batch sizes used by leaf/cloud
eval_batch_size = 128
cluster_better_delta = 0.0

# Dataset flag used by your codepaths
dataset_flag = "cifar10"

# Dirichlet Partitioning (kept; used by your partitioner)
[tool.flwr.hierarchy.dirichlet]
alpha_server = 10.0
alpha_client = 0.7
seed = 123

# ------------------------------------------------------------
# Cloud clustering knobs (read by cloud_flower.py)
# ------------------------------------------------------------
[tool.flwr.cloud_cluster]
enable = true
start_round = 1
frequency = 1
method = "cosine_similarity"
tau = 0.01

# (cloud_flower.py currently reads `[tool.flwr.cluster]` too;
# keep an empty section to avoid key errors in some variants)
[tool.flwr.cluster]

# ------------------------------------------------------------
# System/Runtime
# ------------------------------------------------------------
[tool.flwr.system]
max_workers = 4
log_level = "INFO"
communication_timeout = 300
max_retries = 3
gc_frequency = 10
verbose_logging = true

# Batch sizes mapping retained for any helper utilities
[tool.flwr.cluster.batch_sizes]
client = 32
server = 32
cloud  = 32
